{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/core/core.module.ts","./src/app/core/header/header.component.ts","./src/app/core/header/header.component.html","./src/app/employee/add-employee/add-employee.component.ts","./src/app/employee/add-employee/add-employee.component.html","./src/app/employee/edit-employee/edit-employee.component.ts","./src/app/employee/edit-employee/edit-employee.component.html","./src/app/employee/employee-detail/employee-detail.component.ts","./src/app/employee/employee-detail/employee-detail.component.html","./src/app/employee/employee-form/employee-form.component.ts","./src/app/employee/employee-form/employee-form.component.html","./src/app/employee/employee-list/employee-list.component.ts","./src/app/employee/employee-list/employee-list.component.html","./src/app/employee/employee-routing.module.ts","./src/app/employee/employee.module.ts","./src/app/shared/Utils/storage.service.ts","./src/app/shared/components/search/search.component.ts","./src/app/shared/components/search/search.component.html","./src/app/shared/dataTypes.ts","./src/app/shared/models/employee.ts","./src/app/shared/pipes/filter.ts","./src/app/shared/services/employee.service.ts","./src/app/shared/services/notification.service.ts","./src/app/shared/services/shared.service.ts","./src/app/shared/shared.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n// import { EmployeeListComponent } from './employee/employee-list/employee-list.component';\n// import { EmployeeDetailComponent } from './employee/employee-detail/employee-detail.component';\n\n\n\nconst routes: Routes = [\n]\n\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {\n\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  constructor() {}\n}\n","\n<app-header></app-header>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { CoreModule } from './core/core.module';\nimport { SharedModule } from './shared/shared.module';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\nimport { ToastrModule } from 'ngx-toastr';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { EmployeeModule } from './employee/employee.module';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    EmployeeModule,\n    AppRoutingModule,\n    CoreModule,\n    SharedModule,\n    BrowserAnimationsModule,\n    ToastrModule.forRoot({\n      timeOut: 3000,\n      positionClass: 'toast-top-right',\n      preventDuplicates: true,\n    }),\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from './header/header.component';\nimport { SharedModule } from '../shared/shared.module';\n\n\n\n@NgModule({\n  declarations: [HeaderComponent],\n  imports: [\n    CommonModule,\n    SharedModule\n  ],\n  exports: [HeaderComponent]\n})\n\nexport class CoreModule { }\n","//Angular Imports\nimport { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute, NavigationEnd } from '@angular/router';\n\n//Application imports\nimport { SharedService } from '../../shared/services/shared.service';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit {\n\n  isHomeUrl: boolean = true;\n  \n  constructor(public sharedService: SharedService, private router: Router) { }\n\n  //Checking for current route\n  ngOnInit(): void {\n    this.router.events.forEach((event) => {\n      if (event instanceof NavigationEnd) {\n        this.isHomeUrl = this.router.url.includes('employees');\n      }\n    });\n  }\n\n  // Redirect to employees.\n  gotToEmployees() {\n    this.router.navigate(['/']);\n\n  }\n}\n","<header class=\"main-header\">\n    <h2>Employee Management System</h2>\n    <div class=\"navigation-buttons\">\n        <span class=\"header-button go-to-employees\" *ngIf = \"!isHomeUrl\" (click) = \"gotToEmployees()\">Employees</span>\n        <span class=\"header-button create-new-member\" *ngIf = \"isHomeUrl\" (click) = \"sharedService.addEmployeeClicked = true\">+ Add Member</span>\n    </div>\n</header>","//Angular imports\nimport { Component, OnInit } from '@angular/core';\n\n//Application Imports\nimport { EmployeeData } from '../../shared/dataTypes';\nimport { EmployeeFormComponent } from '../employee-form/employee-form.component';\nimport { EmployeeService } from '../../shared/services/employee.service';\nimport { SharedService } from '../../shared/services/shared.service';\nimport { NotificationService } from '../../shared/services/notification.service';\nimport { Employee } from '../../shared/models/employee';\n\n@Component({\n  selector: 'app-add-employee',\n  templateUrl: './add-employee.component.html',\n  styleUrls: ['./add-employee.component.scss']\n})\nexport class AddEmployeeComponent implements OnInit {\n  \n  constructor(private employeeService: EmployeeService,\n              private notificatioService: NotificationService,\n              public sharedService: SharedService) {\n   }\n\n  ngOnInit(): void {}\n\n  submit(employee: Employee) {\n    employee.id = Date.now().toString();\n    this.employeeService.saveEmployee(employee);\n    this.sharedService.addEmployeeClicked = false;\n    this.notificatioService.showSuccess(\"Employee added successfully.\", 'Add Employee')\n  }\n}\n","<div class=\"backdrop\" (click) = \"sharedService.addEmployeeClicked = false\"></div>\n<app-employee-form (formEmit) = \"submit($event)\">\n</app-employee-form>","// Angular Imports\nimport { Component, OnInit, Input } from '@angular/core';\n\n//Application Imports\nimport { EmployeeFormComponent } from '../employee-form/employee-form.component';\nimport { EmployeeService } from '../../shared/services/employee.service';\nimport { SharedService } from '../../shared/services/shared.service';\nimport { EmployeeData } from '../../shared/dataTypes';\nimport { NotificationService } from '../../shared/services/notification.service';\nimport { Employee } from '../../shared/models/employee';\n\n@Component({\n  selector: 'app-edit-employee',\n  templateUrl: './edit-employee.component.html',\n  styleUrls: ['./edit-employee.component.scss']\n})\nexport class EditEmployeeComponent implements OnInit {\n\n  @Input() employeeId: string;\n  \n  constructor(private employeeService: EmployeeService, public sharedService: SharedService, private notificatioService: NotificationService) { }\n\n\n  ngOnInit(): void {\n\n  }\n\n  // Updating employee and close edit modal.\n  submit(employee: Employee) {\n    employee.id = this.sharedService.editEmployeeClicked.employeeId;\n    this.employeeService.updateEmployee(employee);\n    this.closeModal();\n    this.notificatioService.showSuccess(\"Employee Edit successfully.\", 'Edit Employee');\n  }\n\n  //Close edit modal\n  closeModal() {\n    this.sharedService.editEmployeeClicked = {show: false, employeeId: ''};\n  }\n\n}\n","<div class=\"backdrop\" (click) = \"closeModal()\"></div>\n<app-employee-form (formEmit) = \"submit($event)\">\n</app-employee-form>","//Angular imports\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\n//Application imports\nimport { Employee } from '../../shared/models/employee';\nimport { EmployeeService } from '../../shared/services/employee.service';\nimport { StorageService } from '../../shared/Utils/storage.service';\n\n@Component({\n  selector: 'app-employee-detail',\n  templateUrl: './employee-detail.component.html',\n  styleUrls: ['./employee-detail.component.scss']\n})\nexport class EmployeeDetailComponent implements OnInit {\n\n  employee: Employee;\n\n  constructor(private activatedRoute: ActivatedRoute,\n              private employeeService: EmployeeService) { }\n\n  //Getting employee id from route and fetching record for that ID.\n  ngOnInit(): void {\n    this.activatedRoute.params.subscribe((parmas) => {\n      const employeeId: string = parmas['id'];\n      this.employeeService.employees();\n      this.employee = this.employeeService.getEmployee(employeeId);\n    })\n  }\n}\n","<div class=\"employee-detail-container\">\n        <div class=\"employee-details\" *ngIf=\"employee; else noResult\">\n          <div class=\"employee-image\" id=\"employee-image\">\n            <img [src]=\"employee.avatar\" alt=\"employee.name\" />\n          </div>\n          <div class=\"employee-info\" id=\"employee-info\">\n            <div>\n                <label>Id: </label>\n                 {{ employee.id }}\n            </div>\n            <div>\n                <label>Name: </label>\n                 {{ employee.name }}\n            </div>\n            <div><label>Email: </label> {{ employee.email }}</div>\n            <div><label>Company Name: </label> {{ employee.company_name }}</div>\n            <div><label>Contact Number: </label> {{ employee.contact_no }}</div>\n            <div><label>Designation: </label> {{ employee.designation }}</div>\n          </div>\n        </div>\n        <ng-template #noResult>\n          <h2 class=\"no-result\">Result not found</h2>\n        </ng-template>\n      \n      </div>","//Angular Imports\nimport { Component, OnInit, EventEmitter, Output } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators, FormControl, AbstractControl } from '@angular/forms';\n\n//Application Imports\nimport { SharedService } from '../../shared/services/shared.service';\nimport { Designation, DESIGNATIONS, EmployeeData, AVATARS } from '../../shared/dataTypes';\nimport { EmployeeService } from '../../shared/services/employee.service';\nimport { Employee } from '../../shared/models/employee';\n\n@Component({\n  selector: 'app-employee-form',\n  templateUrl: './employee-form.component.html',\n  styleUrls: ['./employee-form.component.scss'],\n  host: {\n    '(document:click)': 'onClick($event)'\n  }\n})\nexport class EmployeeFormComponent implements OnInit {\n\n  employeeForm: FormGroup;\n  avatars = AVATARS;\n  selectedAvatar = AVATARS[0];\n  showAvatarDropdown = false;\n  @Output() formEmit = new EventEmitter<Employee>()\n\n  constructor(public sharedService: SharedService,\n              private formBuilder: FormBuilder,\n              private employeeService: EmployeeService) { }\n\n\n\n  //Initialized form for add and edit both cases\n  ngOnInit(): void {\n    this.initializeForm();\n  }\n\n  //Prepare form for add and edit and in case of edit set values in form.\n  initializeForm() {\n    this.employeeForm = this.formBuilder.group({\n      name: [null, Validators.required],\n      company_name: [null, Validators.required],\n      email: [null, [Validators.required, Validators.pattern(\"^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$\")]],\n      contact_no: [null, [Validators.required, Validators.pattern(\"[0-9]{10}\")]],\n      designation: [Designation.SoftwareDeveloper],\n      avatar: [null],\n    });\n    const employeeId = this.sharedService.editEmployeeClicked.employeeId;\n    if(employeeId) {\n      const employee = this.employeeService.getEmployee(employeeId);\n      this.selectedAvatar = employee.avatar;\n      this.employeeForm.patchValue(employee);\n    }\n  }\n\n\n  // get designations\n  get designations(): Designation[] {\n    return DESIGNATIONS;\n  }\n\n  // getting form control on the basis of key\n  getFormControl(key): AbstractControl {\n    return this.employeeForm.get(key);\n  }\n  \n  //Select avatar\n  selectAvatar(avatar) {\n    this.showAvatarDropdown = false;\n     this.selectedAvatar = avatar;\n  }\n\n  //Checking if click on avatar select box header, then shows dropdown.\n  onClick(event) {\n    const element = event.target;\n    if ((element.classList.contains('avatarRow'))) {\n      this.showAvatarDropdown = !this.showAvatarDropdown;\n    }\n  }\n\n  submit() {\n    console.log(this.employeeForm)\n    this.formEmit.emit(this.employeeForm.value);\n  }\n\n  //cancel dialog\n  cancel() {\n    if(this.sharedService.editEmployeeClicked.employeeId) {\n      this.sharedService.editEmployeeClicked = {show: false, employeeId: ''};\n    } else {\n      this.sharedService.addEmployeeClicked = false\n    }\n  }\n}","<div class=\"employee-modal\">\n    <h1 class=\"employee-modal-title\">{{(sharedService.editEmployeeClicked?.employeeId ? 'Edit ': 'Add ')}} Employee</h1>\n    <div class=\"employee-form\">\n        <form [formGroup]=\"employeeForm\">\n            <div class = \"input-block\">\n                    <!-- <div class=\"dropdown\">\n                            <button (click) =\"showHideDropdown()\" class=\"dropbtn\">Dropdown</button>\n                            <div id=\"myDropdown\" class=\"dropdown-content\" *ngIf = \"showDropdown\">\n                              <a href=\"#home\">Home</a>\n                              <a href=\"#about\">About</a>\n                              <a href=\"#contact\">Contact</a>\n                            </div>\n                          </div> -->\n                <label for=\"name\">Name *</label>\n                <input formControlName=\"name\" type=\"text\" id=\"name\">\n                <div *ngIf=\"!getFormControl('name').valid && getFormControl('name').touched\" class=\"invalid-feedback\">\n                    <div *ngIf=\"getFormControl('name').errors.required\">First Name is required</div>\n                </div>\n            </div>\n            <div class = \"input-block\">\n                <label for=\"company_name\">Company Name *</label>\n                <input formControlName=\"company_name\" type=\"text\" id=\"company-name\">\n                <div *ngIf=\"!getFormControl('company_name').valid && getFormControl('company_name').touched\" class=\"invalid-feedback\">\n                        <div *ngIf=\"getFormControl('company_name').errors.required\">Company Name is required</div>\n                    </div>\n            </div>\n            <div class=\"input-block\">\n                <label for=\"email\">E-Mail *</label>\n                <input formControlName=\"email\" type=\"email\" id=\"email\">\n                <div *ngIf=\"!getFormControl('email').valid && getFormControl('email').touched\" class=\"invalid-feedback\">\n                        <div *ngIf=\"getFormControl('email').errors.required\">Email is required</div>\n                        <div *ngIf=\"getFormControl('email').errors.pattern\">Email should be in correct format</div>\n                </div>\n            </div>\n            <div class=\"input-block\">\n                <label for=\"contact_no\">Contact Number *</label>\n                <input formControlName=\"contact_no\" type=\"text\" id=\"contact_no\">\n                <div *ngIf=\"!getFormControl('contact_no').valid && getFormControl('contact_no').touched\" class=\"invalid-feedback\">\n                        <div *ngIf=\"getFormControl('contact_no').errors.required\">Contact Number is required</div>\n                        <div *ngIf=\"getFormControl('contact_no').errors.pattern\">Contact Number should be in correct format</div>\n                    </div>\n            </div>\n            <div class=\"input-block flexRow\">\n                    <div class=\"halfWidth avatarRowGroup\">\n                            <label >Avatar *</label>\n                            <div class=\"avatarRow\">\n                                <span><img [src]=\"selectedAvatar\"><input type=\"text\" formControlName = \"avatar\" [(ngModel)] = \"selectedAvatar\"  style=\"display: none\"></span>\n                                <ul *ngIf = \"showAvatarDropdown\">\n                                    <li *ngFor = \"let avatar of avatars\" (click) = \"selectAvatar(avatar)\"><img [src]=\"avatar\"></li>\n                                </ul>\n                            </div>\n                    </div>\n\n                    <div class=\"spacer-h\"></div>\n\n                <div class=\"halfWidth designationRowGroup\">\n                        <label for=\"designation\">Designation *</label>\n                        <select formControlName=\"designation\" id=\"designation\">\n                            <option *ngFor = \"let dsgn of designations\" [value]=\"dsgn\">{{dsgn}}</option>\n                        </select>\n                        <div *ngIf=\"!getFormControl('designation').valid && getFormControl('designation').touched\" class=\"invalid-feedback\">\n                                <div *ngIf=\"getFormControl('designation').errors.required\">Designation is required</div>\n                            </div>\n                </div>\n            </div>\n            <div class=\"employee-modal-actions\">\n                    <button class=\"employee-modal-action employee-modal-action-submit\" [disabled]=\"!employeeForm.valid\" (click) = \"submit()\">Add</button>\n                    <button class=\"employee-modal-action employee-modal-action-cancel\" (click)=\"cancel()\" type=\"button\">Cancel</button>\n            </div>\n        </form>\n    </div>\n\n</div>\n","//Angular imports\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n//Application Imports\nimport { Employee } from '../../shared/models/employee';\nimport { EmployeeService } from '../../shared/services/employee.service';\nimport { SharedService } from '../../shared/services/shared.service';\nimport { NotificationService } from '../../shared/services/notification.service';\n\n@Component({\n  selector: 'app-employee-list',\n  templateUrl: './employee-list.component.html',\n  styleUrls: ['./employee-list.component.scss']\n})\nexport class EmployeeListComponent implements OnInit {\n\n  employees: Employee[] = [];\n  searchText: string = '';\n  deleteModal = {show: false, id: ''};\n\n  constructor(private employeeService: EmployeeService,\n              private notificatioService: NotificationService,\n              public sharedService: SharedService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.getEmployees();\n  }\n\n  //Fetch Employees from local storage\n  getEmployees() {\n    this.employees = this.employeeService.employees();\n  }\n\n  //Show delete modal\n  showDeleteModal(employeeId) {\n    this.deleteModal.show = true;\n    this.deleteModal.id = employeeId;\n  }\n\n  //Hide Delete modal\n  hideDeleteModal() {\n    this.deleteModal = {show: false, id: ''};\n  }\n\n  //Delete Employee from local stoarge and get emplyees again.\n  deleteEmployee() {\n    this.employeeService.deleteEmployee(this.deleteModal.id);\n    this.notificatioService.showSuccess(\"Employee Delete successfully.\", 'Delete Employee');\n    this.getEmployees();\n    this.hideDeleteModal();\n  }\n\n  //Show update employee popup.\n  editEmployee(employeeId: string) {\n    this.sharedService.editEmployeeClicked.show = true;\n    this.sharedService.editEmployeeClicked.employeeId = employeeId;\n  }\n\n  //Redirect to Employee detail\n  employeeDetail(employeeId) {\n    this.router.navigate(['/employee', employeeId]);\n  }\n}\n","<div class=\"employee-list\">\n    <div *ngIf=\"deleteModal?.show\" (click)=\"hideDeleteModal()\" class=\"backdrop\"></div>\n    <app-search *ngIf = \"employees.length > 0\" (searchEmit)=\"searchText = $event\"></app-search>\n    <div class=\"table-users\" *ngIf = \"employees.length > 0; else noResult\">\n        <table cellspacing=\"0\">\n            <tr>\n                <th></th>\n                <th>Id</th>\n                <th>Name</th>\n                <th>Company Name</th>\n                <th>Email</th>\n                <th>Contact</th>\n                <th>Designation</th>\n                <th>Action</th>\n            </tr>\n\n            <tr *ngFor=\"let employee of employees | filter: searchText\">\n                <td>\n                    <img [src]=\"employee.avatar\">\n                </td>\n                <td>{{employee.id}}</td>\n                <td>{{employee.name}}</td>\n                <td>{{employee.company_name}}</td>\n                <td>{{employee.email}}</td>\n                <td>{{employee.contact_no}}</td>\n                <td>{{employee.designation}}</td>\n                <td>\n                    <span class=\"action-button\" (click)=\"editEmployee(employee.id)\">\n                        <i class=\"fa fa-pencil-square-o\" aria-hidden=\"true\"></i>\n                    </span>\n                    <span class=\"action-button\" (click)=\"showDeleteModal(employee.id)\">\n                        <i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i>\n                    </span>\n                    <span class=\"action-button\" (click)=\"employeeDetail(employee.id)\">\n                        <i class=\"fa fa-info-circle\" aria-hidden=\"true\"></i>\n                    </span>\n                </td>\n\n            </tr>\n        </table>\n    </div>\n    <ng-template #noResult>\n        <h2 class=\"no-result\">Result not found</h2>\n    </ng-template>\n</div>\n<app-add-employee *ngIf=\"sharedService.addEmployeeClicked\"></app-add-employee>\n<app-edit-employee *ngIf=\"sharedService.editEmployeeClicked?.show\"></app-edit-employee>\n<div class=\"employee-delete-modal\" *ngIf=\"deleteModal?.show\">\n    <h1 class=\"employee-delete-modal-title\">You want to delete?</h1>\n\n    <div class=\"employee-modal-actions\">\n        <button class=\"employee-modal-action employee-modal-action-submit\" (click)=\"deleteEmployee()\">Yes</button>\n        <button class=\"employee-modal-action employee-modal-action-cancel\" (click)=\"hideDeleteModal()\">No</button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { EmployeeDetailComponent } from './employee-detail/employee-detail.component';\n\n\nconst routes: Routes = [\n  { path: '', redirectTo: 'employees', pathMatch: 'full' },\n  { path:\"employees\", component:EmployeeListComponent },\n  { path:\"employee/:id\", component: EmployeeDetailComponent },\n  { path:\"**\", redirectTo:'employees' },\n]\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class EmployeeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EmployeeRoutingModule } from './employee-routing.module';\nimport { EmployeeFormComponent } from './employee-form/employee-form.component';\nimport { EditEmployeeComponent } from './edit-employee/edit-employee.component';\nimport { AddEmployeeComponent } from './add-employee/add-employee.component';\nimport { EmployeeDetailComponent } from './employee-detail/employee-detail.component';\nimport { EmployeeListComponent } from './employee-list/employee-list.component';\nimport { SharedModule } from '../shared/shared.module';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [\n    EmployeeListComponent,\n    EmployeeDetailComponent,\n    AddEmployeeComponent,\n    EditEmployeeComponent,\n    EmployeeFormComponent\n  ],\n  imports: [\n    CommonModule,\n    SharedModule,\n    FormsModule,\n    ReactiveFormsModule,\n    EmployeeRoutingModule\n  ]\n})\nexport class EmployeeModule { }\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StorageService {\n\n  constructor() { }\n\n  public static setLocalStorage(key, value) {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n\n  public static getLocalStorage(key, defaultValue = null) {\n    const item = localStorage.getItem(key);\n    return item ? JSON.parse(item) : defaultValue;\n  }\n}\n","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-search',\n  templateUrl: './search.component.html',\n  styleUrls: ['./search.component.scss']\n})\nexport class SearchComponent implements OnInit {\n\n  searchText: string = '';\n  @Output() searchEmit: EventEmitter<string> = new EventEmitter();\n  \n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n  //Emit search text for parent components.\n  searchEmployees() {\n    this.searchEmit.emit(this.searchText);\n  }\n\n}\n","<div class=\"search-employees\">\n        <input type=\"search\"\n               class=\"search-employees-input\"\n               placeholder=\"Search\"\n               name=\"search\"\n               [(ngModel)] = \"searchText\"\n               autocomplete=\"off\"\n               (input)=\"searchEmployees()\">\n        <button class=\"search-employees-button\"><i class=\"fa fa-search search-icon\" aria-hidden=\"true\"></i></button>\n      </div>","\nexport interface EmployeeData {\n    id: string;\n    name: string;\n    company_name: string;\n    email: string;\n    contact_no: string;\n    designation: Designation; \n    avatar?: string; \n  }\n\n  export enum Designation {\n      SoftwareDeveloper =  'Software Developer',\n      SeniorSoftwareDeveloper =  'Senior Software Developer',\n      QualityAssurance =  'Quality Assurance',\n      TeamLead =  'Team Lead',\n      Manager =  'Manager',\n  }\n\n  export const DESIGNATIONS  = [Designation.SoftwareDeveloper, Designation.SeniorSoftwareDeveloper, Designation.QualityAssurance, Designation.TeamLead, Designation.Manager];\n\n  export const AVATARS = ['assets/images/software-developer.jpg', 'assets/images/senior-developer.png', 'assets/images/QA.png', 'assets/images/team-lead.jpg', 'assets/images/manager.jpg'];","import { EmployeeData, Designation } from '../dataTypes';\n\nexport class Employee implements EmployeeData {\n    id: string;\n    name: string;\n    company_name: string;\n    email: string;\n    contact_no: string;\n    designation: Designation; \n    avatar?: string; \n    constructor(data: EmployeeData) {\n        this.id = data.id;\n        this.name = data.name;\n        this.company_name = data.company_name;\n        this.email = data.email;\n        this.contact_no = data.contact_no;\n        this.designation = data.designation;\n        this.avatar = data.avatar;\n    }\n}\n","\nimport { Pipe, PipeTransform } from '@angular/core';\n@Pipe({\n    name: 'filter'\n})\nexport class FilterPipe implements PipeTransform {\n    transform(items: any[], searchText: string): any[] {\n        if (!items) return [];\n        if (!searchText) return items;\n        searchText = searchText.toLowerCase();\n        return items.filter(it => {\n            return (it.name.toLowerCase().includes(searchText) || it.id.toLowerCase().includes(searchText) || it.email.toLowerCase().includes(searchText));\n        });\n    }\n}","//Angular imports\nimport { Injectable } from '@angular/core';\n\n//Application imports\nimport { Employee } from '../models/employee';\nimport { Designation, EmployeeData } from '../dataTypes';\nimport {StorageService} from '../Utils/storage.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EmployeeService {\n\n  private allEmployees: Employee[] = [];\n\n  constructor() { }\n\n\n  // Get All employees from local storage\n  employees(): Employee[] {\n    this.allEmployees = StorageService.getLocalStorage('employees', []);\n    return this.allEmployees;\n  }\n\n  // Save employee in local storage\n  saveEmployee(employeeData) {\n      this.allEmployees.unshift(new Employee(employeeData));\n      StorageService.setLocalStorage('employees', this.allEmployees);\n  }\n\n  //Delete employee from local storage\n  deleteEmployee(employeeId: string) {\n    this.allEmployees = this.allEmployees.filter(employee => employee.id != employeeId);\n    StorageService.setLocalStorage('employees', this.allEmployees);\n  }\n\n  // Get employee by employee id fromlocal storage\n  getEmployee(employeeId: string) {\n    return this.allEmployees.find(employee => employee.id == employeeId);\n  }\n\n  //Update Employee\n  updateEmployee(employee: Employee) {\n    const index = this.allEmployees.findIndex((emp) => emp.id === employee.id);\n    this.allEmployees[index] = employee\n    StorageService.setLocalStorage('employees', this.allEmployees);\n  }\n}\n","// ANgular imports\nimport { Injectable } from '@angular/core';\n\n//Third party imports\nimport { ToastrService } from 'ngx-toastr';\n  \n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n  \n  constructor(private toastr: ToastrService) { }\n  \n  // show success toaster message\n  showSuccess(message, title){\n      this.toastr.success(message, title)\n  }\n  \n  // show Error toaster message\n  showError(message, title){\n      this.toastr.error(message, title)\n  }\n  \n  // show Info toaster message\n  showInfo(message, title){\n      this.toastr.info(message, title)\n  }\n  \n  // show warning toaster message\n  showWarning(message, title){\n      this.toastr.warning(message, title)\n  }\n  \n}","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SharedService {\n \n  // Add employee button is clicked or not\n  addEmployeeClicked = false;\n  \n  // Edit employee button is clicked or not\n  editEmployeeClicked = {employeeId: '', show: false}\n\n  constructor() { }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { EmployeeService } from './services/employee.service';\nimport { SharedService } from './services/shared.service';\nimport { FilterPipe } from './pipes/filter';\nimport { SearchComponent } from './components/search/search.component';\nimport { FormsModule } from '@angular/forms';\nimport { NotificationService } from './services/notification.service';\n\n\n\n@NgModule({\n  declarations: [\n    FilterPipe,\n    SearchComponent\n  ],\n  imports: [\n    CommonModule,\n    FormsModule\n  ],\n  providers: [EmployeeService, SharedService, NotificationService],\n  exports: [FilterPipe, SearchComponent]\n})\nexport class SharedModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}